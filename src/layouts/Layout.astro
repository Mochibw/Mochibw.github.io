---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Sidebar from '../components/Sidebar.astro';
import '../styles/theme.css';
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
}

const { title = 'Linatur 的知识库与思考花园', description = '简约、清新、精致的个人网站，分享想法与学习笔记' } = Astro.props;
---

<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <Sidebar />

    <div id="main-content" class="ml-0 md:ml-64 flex flex-col min-h-screen transition-all duration-300 ease-in-out">
      <Header />

      <main class="flex-grow">
        <div class="page-transition">
          <slot />
        </div>
      </main>

      <Footer />
    </div>

    <script>
      // 侧边栏控制逻辑
      let isCollapsed = false;
      let isMobileMenuOpen = false;

      const sidebar = document.getElementById('sidebar');
      const sidebarToggle = document.getElementById('sidebar-toggle');
      const sidebarCollapseBtn = document.getElementById('sidebar-collapse-btn');
      const sidebarOverlay = document.getElementById('sidebar-overlay');
      const mainContent = document.getElementById('main-content');
      const collapseIcon = document.getElementById('collapse-icon');

      // 桌面端收放功能
      if (sidebarCollapseBtn && sidebar) {
        sidebarCollapseBtn.addEventListener('click', () => {
          isCollapsed = !isCollapsed;

          if (isCollapsed) {
            sidebar.classList.add('sidebar-collapsed');
            mainContent.classList.remove('md:ml-64');
            mainContent.classList.add('md:ml-16');
            if (collapseIcon) {
              collapseIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>';
            }
          } else {
            sidebar.classList.remove('sidebar-collapsed');
            mainContent.classList.remove('md:ml-16');
            mainContent.classList.add('md:ml-64');
            if (collapseIcon) {
              collapseIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>';
            }
          }
        });
      }

      // 移动端菜单切换
      if (sidebarToggle && sidebar && sidebarOverlay) {
        sidebarToggle.addEventListener('click', () => {
          isMobileMenuOpen = !isMobileMenuOpen;

          if (isMobileMenuOpen) {
            sidebar.classList.remove('-translate-x-full');
            sidebarOverlay.classList.add('active');
          } else {
            sidebar.classList.add('-translate-x-full');
            sidebarOverlay.classList.remove('active');
          }
        });

        // 点击遮罩关闭移动端菜单
        sidebarOverlay.addEventListener('click', () => {
          isMobileMenuOpen = false;
          sidebar.classList.add('-translate-x-full');
          sidebarOverlay.classList.remove('active');
        });
      }

      // 响应式处理
      function handleResize() {
        if (window.innerWidth >= 768 && sidebar && mainContent) {
          // 桌面端：关闭移动端菜单
          isMobileMenuOpen = false;
          sidebar.classList.remove('-translate-x-full');
          if (sidebarOverlay) {
            sidebarOverlay.classList.remove('active');
          }
        } else if (window.innerWidth < 768 && sidebar && mainContent) {
          // 移动端：重置桌面端收放状态
          sidebar.classList.remove('sidebar-collapsed');
          mainContent.classList.remove('md:ml-16');
          mainContent.classList.add('md:ml-0');
        }
      }

      window.addEventListener('resize', handleResize);
      // 延迟执行初始化，确保DOM完全加载
      setTimeout(handleResize, 100);
    </script>
  </body>
</html>