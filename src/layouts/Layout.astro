---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Sidebar from '../components/Sidebar.astro';
import '../styles/theme.css';
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
}

const { title = 'Linatur 的知识库与思考花园', description = '简约、清新、精致的个人网站，分享想法与学习笔记' } = Astro.props;
---

<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      // 在页面渲染前设置初始状态类，避免闪烁
      (function() {
        const savedState = localStorage.getItem('sidebarCollapsed');
        if (savedState === 'true') {
          document.documentElement.classList.add('sidebar-initial-collapsed');
        }
      })();
    </script>
    <style>
      /* 页面加载时的临时禁用过渡动画的类 */
      .initial-load-no-transition {
        transition: none !important;
      }
      /* 初始收起状态样式 */
      .sidebar-initial-collapsed .sidebar-collapsed {
        transform: translateX(-200px) !important;
      }
      .sidebar-initial-collapsed #main-content {
        margin-left: 0 !important;
      }
    </style>
  </head>
  <body class="bg-gray-50 min-h-screen flex flex-col">
    <Sidebar />

    <div id="main-content" class="ml-0 md:ml-64 transition-all duration-300 ease-in-out flex flex-col min-h-screen">
      <Header />

      <main class="flex-1 overflow-y-auto pb-8">
        <div class="page-transition">
          <slot />
        </div>
      </main>

      <Footer />
    </div>

    <script>
      // 侧边栏控制逻辑
      let isCollapsed = false;
      let isMobileMenuOpen = false;

      const sidebar = document.getElementById('sidebar');
      const sidebarToggle = document.getElementById('sidebar-toggle');
      const sidebarCollapseBtn = document.getElementById('sidebar-collapse-btn');
      const sidebarOverlay = document.getElementById('sidebar-overlay');
      const mainContent = document.getElementById('main-content');
      const collapseIcon = document.getElementById('collapse-icon');

      // 更新按钮位置
      function updateButtonPosition() {
        if (sidebarCollapseBtn) {
          if (isCollapsed) {
            sidebarCollapseBtn.style.left = '1rem';
          } else {
            sidebarCollapseBtn.style.left = '244px';
          }
        }
      }

      // 从 localStorage 读取侧边栏状态并立即应用（避免初始加载时的动画）
      function loadSidebarState() {
        const savedState = localStorage.getItem('sidebarCollapsed');

        // 只在初始加载时禁用过渡动画
        sidebar?.classList.add('initial-load-no-transition');
        mainContent?.classList.add('initial-load-no-transition');

        if (savedState === 'true' && sidebar && mainContent && collapseIcon) {
          // 收起状态
          isCollapsed = true;
          sidebar.classList.add('sidebar-collapsed');
          mainContent.classList.remove('md:ml-64');
          mainContent.classList.add('md:ml-0');
          collapseIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M9 5l7 7-7 7"/>';
        } else {
          // 展开状态
          isCollapsed = false;
          sidebar.classList.remove('sidebar-collapsed');
          mainContent.classList.remove('md:ml-0');
          mainContent.classList.add('md:ml-64');
          if (collapseIcon) {
            collapseIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M15 19l-7-7 7-7"/>';
          }
        }

        // 更新按钮位置
        updateButtonPosition();

        // 恢复侧边栏滚动位置
        const savedScrollPos = sessionStorage.getItem('sidebarScrollPos');
        if (savedScrollPos && sidebar) {
          sidebar.scrollTop = parseInt(savedScrollPos);
        }

        // 100ms后移除临时类，恢复过渡动画
        setTimeout(() => {
          sidebar?.classList.remove('initial-load-no-transition');
          mainContent?.classList.remove('initial-load-no-transition');
          // 移除初始状态类，避免影响后续的动态切换
          document.documentElement.classList.remove('sidebar-initial-collapsed');
        }, 100);
      }

      // 页面加载时应用保存的状态
      loadSidebarState();

      // 保存侧边栏滚动位置
      if (sidebar) {
        sidebar.addEventListener('scroll', () => {
          sessionStorage.setItem('sidebarScrollPos', sidebar.scrollTop.toString());
        });
      }

      // 桌面端收放功能
      if (sidebarCollapseBtn && sidebar) {
        sidebarCollapseBtn.addEventListener('click', () => {
          isCollapsed = !isCollapsed;

          // 保存状态到 localStorage
          localStorage.setItem('sidebarCollapsed', isCollapsed.toString());

          if (isCollapsed) {
            sidebar.classList.add('sidebar-collapsed');
            mainContent.classList.remove('md:ml-64');
            mainContent.classList.add('md:ml-0');
            if (collapseIcon) {
              collapseIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M9 5l7 7-7 7"/>';
            }
          } else {
            sidebar.classList.remove('sidebar-collapsed');
            mainContent.classList.remove('md:ml-0');
            mainContent.classList.add('md:ml-64');
            if (collapseIcon) {
              collapseIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M15 19l-7-7 7-7"/>';
            }
          }

          // 更新按钮位置
          updateButtonPosition();
        });
      }

      // 移动端菜单切换
      if (sidebarToggle && sidebar && sidebarOverlay) {
        sidebarToggle.addEventListener('click', () => {
          isMobileMenuOpen = !isMobileMenuOpen;

          if (isMobileMenuOpen) {
            sidebar.classList.remove('-translate-x-full');
            sidebarOverlay.classList.add('active');
          } else {
            sidebar.classList.add('-translate-x-full');
            sidebarOverlay.classList.remove('active');
          }
        });

        // 点击遮罩关闭移动端菜单
        sidebarOverlay.addEventListener('click', () => {
          isMobileMenuOpen = false;
          sidebar.classList.add('-translate-x-full');
          sidebarOverlay.classList.remove('active');
        });
      }

      // 响应式处理
      function handleResize() {
        if (window.innerWidth >= 768 && sidebar && mainContent) {
          // 桌面端：关闭移动端菜单
          isMobileMenuOpen = false;
          sidebar.classList.remove('-translate-x-full');
          if (sidebarOverlay) {
            sidebarOverlay.classList.remove('active');
          }
        } else if (window.innerWidth < 768 && sidebar && mainContent) {
          // 移动端：重置桌面端收放状态
          sidebar.classList.remove('sidebar-collapsed');
          mainContent.classList.remove('md:ml-64');
          mainContent.classList.add('md:ml-0');
        }
      }

      window.addEventListener('resize', handleResize);
      // 延迟执行初始化，确保DOM完全加载
      setTimeout(handleResize, 100);

      // 页面卸载前保存状态
      window.addEventListener('beforeunload', () => {
        if (sidebar) {
          sessionStorage.setItem('sidebarScrollPos', sidebar.scrollTop.toString());
        }
      });

      // 阻止点击当前页面链接导致的页面重载和闪烁
      function preventCurrentPageReload() {
        const currentPath = window.location.pathname;
        const links = document.querySelectorAll('a[href]');

        links.forEach(link => {
          const href = link.getAttribute('href');
          if (href) {
            // 获取链接的完整路径
            const linkPath = new URL(href, window.location.origin).pathname;

            // 如果链接指向当前页面，阻止默认行为
            if (linkPath === currentPath) {
              link.addEventListener('click', (e) => {
                e.preventDefault();
              });
            }
          }
        });
      }

      // 页面加载完成后执行
      preventCurrentPageReload();
    </script>
  </body>
</html>
